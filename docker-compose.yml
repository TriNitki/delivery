version: "3.7"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["tail", "-f", "/dev/null"]
    volumes:
      - .:/app
    ports:
      - 8008:8000
    environment:
      - POSTGRES_URL=${DOCKER_POSTGRES_URL}
      - CASSANDRA_IP_ADDRESS=${DOCKER_CASSANDRA_IP_ADDRESS}
      - CASSANDRA_KEYSPACE=${CASSANDRA_KEYSPACE}
      - ENDPOINT=${DOCKER_ENDPOINT}
    depends_on:
      - db
      - cas1
    networks:
      testing_net:
        ipv4_address: 172.28.1.1
    
  cas1:
    container_name: cas1
    image: cassandra:latest
    ports:
      - 9042:9042
    environment:
      - CASSANDRA_START_RPC=${DOCKER_CASSANDRA_START_RPC}
      - CASSANDRA_CLUSTER_NAME=${DOCKER_CASSANDRA_CLUSTER_NAME}
      - CASSANDRA_ENDPOINT_SNITCH=${DOCKER_CASSANDRA_ENDPOINT_SNITCH}
      - CASSANDRA_DC=${DOCKER_CASSANDRA_DC}
    networks:
      testing_net:
        ipv4_address: 172.28.1.2


  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    container_name: postgresql_delivery
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${DOCKER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DOCKER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${DOCKER_POSTGRES_DB}
    networks:
      testing_net:
        ipv4_address: 172.28.1.4


volumes:
  postgres_data:

networks:
  testing_net:
      ipam:
        driver: default
        config:
            - subnet: 172.28.0.0/16