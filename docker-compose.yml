version: "3.7"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["tail", "-f", "/dev/null"]
    volumes:
      - .:/app
    ports:
      - 8008:8000
    environment:
      - POSTGRES_URL=postgresql://postgres:popmenlal@db:5432/delivery
      - CASSANDRA_IP_ADDRESS=172.28.1.3
      - CASSANDRA_KEYSPACE=delivery
      - POSTGRES_PASSWORD=popmenlal
    depends_on:
      - db
      - cas1
    networks:
      testing_net:
        ipv4_address: 172.28.1.1
    
  cas1:
    container_name: cas1
    image: cassandra:latest
    ports:
      - 9042:9042
    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=MyCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=datacenter1
    networks:
      testing_net:
        ipv4_address: 172.28.1.2

  cas2:
    container_name: cas2
    image: cassandra:latest
    ports:
        - 9043:9042
    depends_on:
      - cas1
    environment:
        - CASSANDRA_START_RPC=true
        - CASSANDRA_CLUSTER_NAME=MyCluster
        - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
        - CASSANDRA_DC=datacenter1
        - CASSANDRA_SEEDS=cas1
    networks:
        testing_net:
          ipv4_address: 172.28.1.3

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    container_name: postgresql_delivery
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=popmenlal
      - POSTGRES_DB=delivery
    networks:
      testing_net:
        ipv4_address: 172.28.1.4


volumes:
  postgres_data:

networks:
  testing_net:
      ipam:
        driver: default
        config:
            - subnet: 172.28.0.0/16